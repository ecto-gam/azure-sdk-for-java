trigger: none

extends:
  template: /eng/pipelines/templates/stages/1es-redirect.yml
  parameters:
    stages:
      - template: /eng/pipelines/templates/stages/archetype-sdk-tests-isolated.yml
        parameters:
          UseFederatedAuth: true
          SupportedClouds: "Public,UsGov,China"
          Clouds: "Public"
          CloudConfig:
            Public:
              SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)
              ServiceConnection: azure-sdk-tests
              SubscriptionConfigurationFilePaths:
                - eng/common/TestResources/sub-config/AzurePublicMsft.json
            UsGov:
              SubscriptionConfiguration: $(sub-config-gov-test-resources)
              ServiceConnection: usgov_azure-sdk-tests
            China:
              SubscriptionConfiguration: $(sub-config-cn-test-resources)
              ServiceConnection: china_azure-sdk-tests
              Location: "chinanorth3"
          TestResourceDirectories:
            - spring/spring-cloud-azure-integration-tests/test-resources/common
#            - spring/spring-cloud-azure-integration-tests/test-resources/jdbc/mysql
            - spring/spring-cloud-azure-integration-tests/test-resources/appconfiguration
            - spring/spring-cloud-azure-integration-tests/test-resources/cosmos
            - spring/spring-cloud-azure-integration-tests/test-resources/servicebus
            - spring/spring-cloud-azure-integration-tests/test-resources/eventhubs
            - spring/spring-cloud-azure-integration-tests/test-resources/storage
            - spring/spring-cloud-azure-integration-tests/test-resources/keyvault
            - spring/spring-cloud-azure-integration-tests/test-resources/dummy
          Artifacts:
            - name: spring-cloud-azure-integration-tests
              groupId: com.azure.spring
              safeName: springcloudazureintegrationtests
          TimeoutInMinutes: 240
          ServiceDirectory: spring
          TestName: Spring_IT
          BuildOptions: '-Denforcer.skip=true'
          TestGoals: "verify"
          TestOptions: -DskipSpringITs=false -Dcompiler.failondeprecatedstatus=-
          MatrixConfigs:
            - Name: spring_boot_supported_version_tests
              Path: sdk/spring/pipeline/supported-version-matrix.json
              Selection: sparse
              NonSparseParameters:
                - SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION
              GenerateVMJobs: true
          PreGenerationSteps:
            - script: |
                python -m pip install termcolor
              displayName: 'Install python module'
            - script: |
                python ./sdk/spring/scripts/compatibility_update_supported_version_matrix_json.py -m 3
              displayName: 'Update Spring supported versions'
          MatrixFilters:
            - JavaTestVersion=^(?!1.8|1.11).*
          AdditionalSparseCheckoutPaths:
            - 'sdk/spring'
          PreSteps:
            - script: |
                python -m pip install termcolor requests
              displayName: 'Install python module'
            - bash: |
                echo "##vso[task.setVariable variable=SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION]$(python ./sdk/spring/scripts/compatibility_get_spring_cloud_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION))"
              displayName: 'Set Spring supported version to environment variables'
            - bash: |
                echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION):"
                echo "https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)/spring-boot-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION).pom"
                echo "$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION):"
                echo "https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)/spring-cloud-dependencies-$(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION).pom"
              displayName: 'Print Spring version and Maven pom path'
            - script: |
                python ./sdk/spring/scripts/compatibility_insert_dependencymanagement.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION) -c $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_CLOUD_VERSION)
              displayName: 'Insert Spring dependency management'
            - script: |
                python ./sdk/spring/scripts/compatibility_delete_version.py -b $(SPRING_CLOUD_AZURE_TEST_SUPPORTED_SPRING_BOOT_VERSION)
              displayName: 'Remove unused dependency version'
